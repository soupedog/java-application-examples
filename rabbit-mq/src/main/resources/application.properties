spring.application.name=rabbit-mq-example

# \u53D1\u5E03\u8005\u53D1\u9001\u5141\u8BB8
#spring.rabbitmq.publisher-confirm-type=correlated
# \u53D1\u5E03\u8005\u53D1\u9001\u5230 Broker \u56DE\u8C03\u5F00\u542F
#spring.rabbitmq.publisher-returns=true

hygge.webToolkit.controller.log.autoRegister=false

hygge.logging.scope-paths.hygge.*=true
hygge.logging.scope-paths.io.github.soupedog=true
hygge.logging.pattern.json-mode.enable=false

hygge.logging.pattern.hygge=[%32X{traceId}] %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(%pid){cyan} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){magenta} %clr(:){faint} %m%n%wEx

test.demo.rabbit.environment-name=dev
test.demo.rabbit.address=localhost:5672
test.demo.rabbit.password=guest
test.demo.rabbit.user-name=guest
test.demo.rabbit.virtual-host=demo-test
test.demo.rabbit.main.exchange=main
test.demo.rabbit.main.routing-key=routingKey-main
test.demo.rabbit.event-bus.exchange=event-bus
test.demo.rabbit.event-bus.event-names=A,B,C
test.demo.rabbit.event-bus.ttl-millisecond=6000
test.demo.rabbit.event-bus.dead-exchange=dead-event-bus
test.demo.rabbit.annotation.exchange=annotation
test.demo.rabbit.annotation.routing-key=routingKey-annotation
test.demo.rabbit.annotation.ttl-millisecond=3000
test.demo.rabbit.annotation.dead-exchange=dead-annotation
test.demo.rabbit.annotation.dead-routing-key=routingKey-dead-annotation
test.demo.rabbit.annotation.dead-ttl-millisecond=3000
test.demo.rabbit.batch.exchange=batch
test.demo.rabbit.batch.routing-key=routingKey-batch
test.demo.rabbit.batch.batch-size=4

# \u6CE8\u89E3\u9ED8\u8BA4\u6D88\u8D39\u8005\u9884\u62C9\u53D6\u8303\u56F4(\u8FD9\u4E2A\u53C2\u6570\u6CE8\u89E3\u4F3C\u4E4E\u81EA\u5DF1\u65E0\u6CD5\u914D\u7F6E) \u6784\u9020\u7684\u662F SimpleMessageListenerContainer \u5B9E\u4F8B
# prefetch \u8BBE\u7F6E\u4E0E SimpleRabbitListenerContainerFactoryConfigurer \u6709\u5173\uFF0C\u4E0E\u6CE8\u89E3\u80FD\u63A7\u5236\u7684\u5BF9\u8C61\u4E0D\u5728\u4E00\u5757\u513F
spring.rabbitmq.listener.simple.prefetch=1
# \u6CE8\u89E3\u9ED8\u8BA4\u6D88\u8D39\u8005\u5E76\u53D1\u5B9E\u4F8B\u6570
spring.rabbitmq.listener.simple.concurrency=1
# \u9ED8\u8BA4\u5B9E\u73B0\u662F\u963B\u585E\u8FDB\u884C loop \u5FAA\u73AF\uFF0C\u53EF\u4EE5\u8BF4\u662F\u6BEB\u65E0\u5375\u7528\u4E86(\u6D88\u8D39\u8005\u9884\u62C9\u53D6\u6570\u91CF\u5360\u6EE1\u5C31\u5835\u6B7B\u4E86\u540E\u9762\u7684\u6D88\u606F)
spring.rabbitmq.listener.simple.retry.enabled=false

# \u9ED8\u8BA4\u5F00\u542F API \u6587\u6863
springdoc.api-docs.enabled=true
springdoc.show-actuator=true
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
# controller \u626B\u63CF\u8DEF\u5F84(\u591A\u4E2A\u7528 "," \u9694\u5F00)
springdoc.packagesToScan=io.github.soupedog.rabbitmq.controller
# \u53EA\u5339\u914D\u6EE1\u8DB3\u4E0B\u5217\u683C\u5F0F\u7684\u7AEF\u70B9(\u591A\u4E2A\u7528 "," \u9694\u5F00)
springdoc.pathsToMatch=/**
# Tag \u9ED8\u8BA4\u5C55\u793A\u6A21\u5F0F(none \u4EE3\u8868\u6536\u8D77)
springdoc.swagger-ui.docExpansion=none
# Schemas \u680F\u9ED8\u8BA4\u5C55\u5F00\u5C42\u6B21(0 \u4EE3\u8868\u6536\u8D77)
springdoc.swagger-ui.defaultModelsExpandDepth=0
